---
title: "Ciencia de datos Full Stack: del laboratorio al producto comercializable"
subtitle: "Jornada Campos Conectados: El futuro digital de la ganader√≠a"
author: "Emilio L. Cano"
institute: "Data Science Laboratory, Universidad Rey Juan Carlos"
format: 
  revealjs:
    theme: [solarized, congresos.scss]
    footer: "Jornada Campos Conectados, Universidad de Vigo, ESII Ourense"
    logo: img/DSLab_logo.png
    menu:
      numbers: false
    show-slide-number: all
    slide-number: true
---

# Data Science


## Union, not intersection

![](img/ds2.png){width=70% fig-align=center}

::: {.notes}
There is quite a bit of consensus about what Data Science is as a sort of 
mixture between Statistics, Computer Science and domain knowledge. A number 
of representations as Venn Diagrams have been developed. I prefer to see 
Data Science as the union of the three sets rather than the intersection, which is 
almost impossible to have in one person.
:::

## R for Data Science

::: {layout="[[-1], [1], [-1]]"}

![](https://r4ds.hadley.nz/diagrams/data-science/base.png){fig-align=center}
:::

::: footer
Source: [R for Data Science](https://r4ds.hadley.nz) (Wickham, √áetinkaya-Rundel and Grolemund, 2023)
:::

## CRISP-DM

:::: {.columns}

::: {.column}

* [Deployment]{.red} may include many different things

* The [use]{.red} of the models

* The [visualisation]{.red} of results

* [MLOps]{.red}: after Computer Science _DevOps_

* Model [Explainability]{.red}




:::

::: {.column}

![](https://upload.wikimedia.org/wikipedia/commons/b/b9/CRISP-DM_Process_Diagram.png){width=120% fig-align=center}

:::

::::


::: footer
Source: <a href="https://commons.wikimedia.org/wiki/File:CRISP-DM_Process_Diagram.png">Kenneth Jensen</a>, <a href="https://creativecommons.org/licenses/by-sa/3.0">CC BY-SA 3.0</a>, via Wikimedia Commons
:::



# Dashboards

## Static reports

:::: {.columns} 

::: {.column}
* Balanced Scorecards: a classical example in the business domain

* Statistical reports: typically key results with charts, tables, and interpretation

* From its origin, designed to be printed and read in paper, [pdf]{.red} format

:::

::: {.column}
![](img/static_report.png){fig-align=center, width=420}
:::

::::

::: footer
[Download](http://emilio.lcano.com/p/enbis2023/static_report.Rmd) .Rmd source | [See online](http://emilio.lcano.com/p/enbis2023/static_report.pdf)
:::

## Static dashboards

More compact, screen friendly

![](img/static_dashboard.png){fig-align=center}

::: footer
[Download](http://emilio.lcano.com/p/enbis2023/static_dashboard.Rmd) .Rmd source | [See online](http://emilio.lcano.com/p/enbis2023/static_dashboard.html)
:::

## Interactive dashboards

Static report with interactive elements (_widgets_)

![](img/interactive_dashboard.png){fig-align=center}

::: footer
[Download](http://emilio.lcano.com/p/enbis2023/interactive_dashboard.Rmd) .Rmd source | [See online](http://emilio.lcano.com/p/enbis2023/interactive_dashboard.html)
:::

## Limitations

* Limited to what the statistician wants to show

* Not only statistical
experts are going to use the Data Science products. 

* Decision making 
at different levels, from process owners to
executive managers. 

. . .

* [Reactive]{.red} apps lead 
stakeholders through the Data Science knowledge discovery path

* Well designed interfaces for cutting-edge models foster explainability



# Reactive apps



## Reactive programming

>The key idea of reactive programming is to specify a graph of dependencies so that when an input changes, all related outputs are automatically updated.
>

:::{style="text-align:right;"}
_Hadley Wickham, [Mastering Shiny](https://mastering-shiny.org/basic-reactivity.html)_
:::

\
\

. . .

The [outputs]{.red}, i.e., plots, tables, etc., are generated by R when the [inputs]{.red}, i.e., user selections, change.

## Shiny applications


* "Regular" R code

* Nothing else needed, all the HTML, CSS and JS is automatically generated

* Two "elements"

* `ui` (user interface, web page). Contains _inputs_ and _outputs_

* `server`. Contains _reactive_ objects and [rendering]{.red} functions 

:::: {.columns}

::: {.column}

- [Download](https://shiny.posit.co/r/articles/start/cheatsheet/) Shiny _cheetsheet_

- [Visit](https://shiny.posit.co/r/gallery/) the Shiny gallery

:::

::: {.column width="25%"}

![](img/shiny.png){fig-align=center width="140"}

:::

::::



## A simple shiny application

::: {.small}

```{r}
#| label: shinypenguins
#| eval: false
#| echo: true
library(shiny)
library(palmerpenguins); library(plotly); library(ggplot2)
ui <- fluidPage(title = "Simple demo app",
  sidebarLayout(
    sidebarPanel(  
      varSelectInput("varx", "Explanatory variable", penguins |> select(where(is.numeric))),
      varSelectInput("vary", "Response variable", penguins |> select(where(is.numeric))),
      varSelectInput("varcol", "Colour variable", penguins |> select(where(is.factor)))),
    mainPanel( 
      plotlyOutput("plot"),
      verbatimTextOutput("model")))
)
server <- function(input, output, session){
  output$plot <- renderPlotly({
    p <- penguins |> ggplot(aes_string(x = input$varx, y = input$vary, col = input$varcol)) +
      geom_point()
    ggplotly(p)})
  output$model <- renderPrint({
    m <- lm(get(input$vary) ~ get(input$varx) + get(input$varcol), penguins)
    summary(m)})
}
shinyApp(ui = ui, server = server)
```

:::

üñ•Ô∏è Live demo ü§ûüèª

# Development and implementation

## FOSS as competitive advantage

* R is Free and Open Source Software

* Free as in free beer and free as in free speech

* Programming language

* Designed for data analysis

* Easy version control, CI/CD


## Software Eng. good practices

* Package versions with [renv](https://rstudio.github.io/renv/index.html)

* [testthat](https://testthat.r-lib.org) and [shinytest](https://rstudio.github.io/shinytest/)

* Version Control and Continuous Integration, e.g., with [GitHub](https://github.com)

* [Deployment as Docker container](https://hosting.analythium.io/running-shiny-server-in-docker/)

## Microservices

* Deployment via Docker containers

* Orchestated (if needed) via docker compose (among others)

* Easily portable and scalable

* Alternative: Posit cloud services

## Databases

* Independent container

* SQL and NoSQL

* Seamless integration

* Importance of the data model

* Automation: data updates, backups, scheduled or trigger actions

* Open data: the potential we must harness.


## Advanced analytics

* Interactive visualization

* Explainable Machine Learning models

* Artificial intelligence models, including LLMs

* Simulation (digital twins, ...)

## Ready-to-use data products

* For private and public sector

* Applied to vried domain

* Several business models

* Automatic reporting


# Success stories





## EVASTUR - Dashboard

![](img/evastur.png){width="70%" fig-align="center"}


::: {style="text-align:center"}
üñ•Ô∏è Live demo ü§ûüèª
:::



## OBEPE

![](img/obepe.png){width="70%" fig-align="center"}

[Acknowledgements:]{.ack} 
![](img/logo_idb.png){height="50"}
![](img/logo_epe_colors.jpg){height="50"} 
![](img/logo_mme.png){height="50"}

::: {style="text-align:center"}
üñ•Ô∏è Live demo ü§ûüèª[public link](https://dashboard.epe.gov.br/apps/OBEPE/)
:::

## Anal√≠tica deportiva
  
  ![](img/pace.png)

## Proyectos de investigaci√≥n: DICYME


* Dynamic Industrial Cyber Risk Modelling based on Evidence (DICYME) research project (CPP2021-009025)


* Proyecto de colaboraci√≥n p√∫blico-privada con DeNexus TECH SL.

* Dashboard (no publicado a√∫n)

* Conexi√≥n con MongoDB

* App relacionada: [CRAS](http://gondor.etsii.urjc.es:3804/)

## Aplicaci√≥n shiny CRAS

* An√°lisis de riesgos

* Primer paso: se simulan los eventos en n a√±os

* Segundo paso: se simula el gasto de cada evento

## Resultados

![](img/3_results_density.png)








## AfCIOT - TiVA indicators

![](img/afciot.png){width="70%" fig-align="center"}

[Acknowledgements:]{.ack} ![](img/uneca.png){height="50"}
![](img/wto.png){height="50"} ![](img/oecd.png){height="50"}

::: {style="text-align:center"}
üñ•Ô∏è Live demo ü§ûüèª
:::

## S√≠agro - Animal production SPC

::: columns
::: {.column width="40%"}
-   [CRO clinical and nutritional trials](http://www.testsandtrials.com)
-   Shiny app for their customers as a value added service
-   Important \[**productivity improvements**\]
-   Simulation and parameterised reports
:::

::: {.column width="60%"}
![](img/testsapp.png)

<img src="img/tests.png" style="width:50%;margin-left:auto;margin-right:auto;display:block;"/>

::: small
<https://www.siagro.es> \| üñ•Ô∏è Live demo ü§ûüèª
:::
:::
:::



## Smart Cities

-   Use cases for Tourism, Healthcare, and Infrastructures in Madrid
    Region

-   Coherent step-by-step apps for the use cases (load data -
    visualisation - modelling - getting results)

-   Some use cases with [Shiny]{.red}, other with Python or Power BI

-   Example: <http://www.citizenlabhub.es/cu/55>


## IMASDE Agroalimentaria

* <https://e-imasde.eu/language/es/home/>


* I+D+i automated reports


::: {style="text-align:center"}
![](img/imasde.png){width=400px}
:::

# Questions? 

`r fontawesome::fa("x-twitter", fill = "#749dae")` [@emilopezcano](https://twitter.com/emilopezcano)


[http://emilio.lcano.com](https://emilio.lcano.com)

[emilio.lopez@urjc.es]{.red}

<!-- Slides: [emilio.lcano.com/p/enbis2023](http://emilio.lcano.com/p/enbis2023/#/title-slide) -->

\

Thanks for your attention



